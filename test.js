// Este archivo es para probar los endpoints de la API

import fetch from 'node-fetch';

const API_URL = 'http://localhost:3000';

// Funci√≥n para realizar las pruebas
async function runTests() {
  console.log('Iniciando pruebas de la API de C√≥digos QR...\n');

  try {
    // 1. Obtener todos los c√≥digos
    console.log('1. Probando GET /codigos');
    const getAllResponse = await fetch(`${API_URL}/codigos`, {
      headers: { 'Accept': 'application/json;encoding=utf-8' }
    });
    const allCodigos = await getAllResponse.json();
    console.log(`   ‚úÖ Status: ${getAllResponse.status}`);
    console.log(`   üìã C√≥digos encontrados: ${allCodigos.length}`);
    console.log('   üìÑ Ejemplo de datos:', allCodigos[0]);
    console.log();

    // 2. Crear un nuevo c√≥digo
    console.log('2. Probando POST /codigos');
    const newCodigo = {
      data: 'https://nuevaurl.com/test',
      type: 'qr'
    };
    
    const createResponse = await fetch(`${API_URL}/codigos`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json;encoding=utf-8',
        'Accept': 'application/json;encoding=utf-8'
      },
      body: JSON.stringify(newCodigo)
    });
    
    const createdCodigo = await createResponse.json();
    console.log(`   ‚úÖ Status: ${createResponse.status}`);
    console.log('   üìÑ C√≥digo creado:', createdCodigo);
    console.log();

    // 3. Obtener un c√≥digo espec√≠fico
    console.log(`3. Probando GET /codigos/${createdCodigo.id}`);
    const getOneResponse = await fetch(`${API_URL}/codigos/${createdCodigo.id}`, {
      headers: { 'Accept': 'application/json;encoding=utf-8' }
    });
    const oneCodigo = await getOneResponse.json();
    console.log(`   ‚úÖ Status: ${getOneResponse.status}`);
    console.log('   üìÑ C√≥digo obtenido:', oneCodigo);
    console.log();

    // 4. Eliminar un c√≥digo
    console.log(`4. Probando DELETE /codigos/${createdCodigo.id}`);
    const deleteResponse = await fetch(`${API_URL}/codigos/${createdCodigo.id}`, {
      method: 'DELETE',
      headers: { 'Accept': 'application/json;encoding=utf-8' }
    });
    console.log(`   ‚úÖ Status: ${deleteResponse.status}`);
    console.log('   üóëÔ∏è C√≥digo eliminado correctamente');
    console.log();

    // 5. Verificar que el c√≥digo fue eliminado
    console.log(`5. Verificando que el c√≥digo ${createdCodigo.id} fue eliminado`);
    const verifyResponse = await fetch(`${API_URL}/codigos/${createdCodigo.id}`, {
      headers: { 'Accept': 'application/json;encoding=utf-8' }
    });
    console.log(`   ‚úÖ Status: ${verifyResponse.status} (404 esperado)`);
    console.log();

    console.log('‚úÖ Todas las pruebas completadas con √©xito!');
  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
  }
}

console.log('Nota: Para ejecutar estas pruebas, aseg√∫rate de que el servidor est√© en ejecuci√≥n');
console.log('Puedes iniciar el servidor con: npm run dev\n');
console.log('Este archivo es solo para referencia y pruebas manuales.');

//ejecutar pruebas
runTests();
